.\" Ministry config manual page
.TH MINISTRY.CONF "5" "Nov 2015" "Networking Utilities" "Configuration Files"
.SH NAME
ministry.conf \- ministry stats daemon config file
.SH SYNOPSIS
.nf
.BI /etc/ministry/ministry.conf
.fi
.SH DESCRIPTION
.PP
This manual page describes the configuration file for \fBministry(1)\fR.  The file is in sections,
and including other files is permitted, though wildcard expansion is not performed - included file
paths must be complete.  Config is read before \fBministry\fR changes directory to it's configured
base directory, so non-absolute paths included are interpreted relative to the current working
directory.
.PP
The sections are used to define a context; this context is used to decide which interpreter function
examines the config line.  This means that config names are essentially namespaced to the section
in which they are found, and as such names may be present in more than one section.  Section names
are not case sensitive.  In fact, only values are case-preserving - all config variable names are
examined case-insensitively.
.SH Sections
.PP
Sections are expected to be presented inside square brackets.  Valid sections are:  (none),
\fBlogging\fR, \fBnetwork\fR, \fBmemory\fR and \fBstats\fR.  e.g.
.PP
\fB[Logging]\fR
.SH Line Format
.PP
Config lines are expected to follow \fBvariable\fR = \fIvalue\fR
.PP
Whitespsace is trimmed fore and aft, and from around the = sign.  If the = and value are absent,
then the value "1" is automatically filled in.  This is useful for switching behaviour on.  Many
config variables contain dots.  Wherever lists of values are permitted, they should be
comma-separated without intervening spaces.  e.g.
.PP
\fBstats.udp.ports = 8100,8101,8102,8103\fR
.SH CONFIG
.PP
The config variables accepted by \fBministry\fR are presented here by section.
.SH Logging
.TP
\fBfilename\fR | \fBfile\fR | \fBlogfile\fR
File name to write the log to
.TP
\fBlevel\fR
Log level, one of FATAL, ERR, WARN, NOTICE, INFO or DEBUG
.SH Memory
.TP
\fBmax_mb\fR | \fBmax_size\fR
Maximum in-memory size (in MB) before \fBministry\fR self-terminates (default 10GB)
.TP
\fBmax_kb\fR
As above, but expressed in KB
.TP
\fBinterval\fR | \fBmsec\fR
Memory size check interval, in milliseconds (default 5000)
.TP
\fBhashsize\fR
Size of the data hash structure table - should be of the same order of magnitude as the expected
number of data paths expected.  Having this value too small results in many hash collsions and list
traversals, slowing down \fBministy\fR.  Larger values use slightly more memory.  Prime number are
recommended to reduce hash collisions, but this is not vital (default 100003)
.TP
\fBgc_thresh\fR
How many submission cycles a path must lie empty for before it is deleted (default 360)
.SH Stats
\fBthresholds\fR
A list of integer percentage values to generate thresholds at.  Must be 0 < x < 100.
.PP
The rest of these are of the form stats.XXX, adder.XXX or self.XXX, affecting the behaviour of either
stats reporting, adder reporting or self reporting.
.TP
\fBTYPE.threads\fR
How many reporting threads to run (not used for self) (default 2)
.TP
\fBTYPE.enable\fR
Enable or disable this reporting (defaults to 1 for all)
.TP
\fBTYPE.prefix\fR
Prefix string for all metrics of this type.  (defaults:  stats.timers., (blank) and stats.ministry.)
.TP
\fBTYPE.period\fR
Reporting interval, in msec.  (default 10000 for all)
.TP
\fBTYPE.delay\fB
Reporting delay, in msec.  \fBMinistry\fR's timing loop aligns reporting intervals to the clock, so,
e.g. 10 second reporting would occur on 10-second boundaries.  The delay must be less than the period
and is used to offset reporting into that interval.  This is useful when systems report data to
\fBministry\fR on their own timing cycle but metrics may or may not make it into a given interval.
So if a reporting system submits adder data every 10 seconds, and \fBministry\fR reports every 10
seconds, it might be prudent to set an offset of 3 or 4 seconds, so that all data for the interval
is in and recorded by the interval is closed (defaults are 0 for all)
.SH Network
.TP
\fBtimeout\fR
Number of seconds a client connection must have been silent for before being considered dead.
.TP
\fBrcv_tmout\fR
Number of seconds to set on UDP sockets for SO_RCVTIMEO (prevents receive blocking indefinitely).
.TP
\fBreconn_msec\fR
Time to wait, in msec, before attempting reconnect to onward targets (default 3000)
.TP
\fBio_msec\fR
How often, in msec, to perform asynchronous IO flushes to onward targets (default 500)
.TP
\fBmax_waiting\fR
Maximum number of IO buffers to permit to be waiting for flush to one target.  Each buffer can hold
256KB but frequently holds much less.  Accounting is still done by number of buffers (default 128)
.TP
\fBtarget\fR
List of onward target hosts (with optional :port).  Names are looked up using standard resolution.
.PP
All remaining network variables are of the form data.XXX, statsd.XXX or adder.XXX, pertaining to
new-style stats ports, statsd-compatible ports or new-style adder ports.
.TP
\fBTYPE.enable\fR
Enable or disable this type of collection (defaults to 1 for all)
.TP
\fBTYPE.enable_tcp\fR
Enable or disable TCP ports for this type of collection (defaults to 1 for all)
.TP
\fBTYPE.enable_udp\fR
Enable or disable UDP ports for this type of collection (defaults to 1 for all)
.TP
\fBTYPE.label\fR
Label these ports have within logging.
.PP
Everything after this is of the form TYPE.udp.XXX or TYPE.tcp.XXX, pertaining to either UDP ports
or TCP ports respectively.  Obviously, the TCP options have no meaning for UDP.
.TP
\fBTYPE.PROTO.bind\fR
Bind address for this type and protocol - must be a local IP address (default IPADDR_ANY)
.TP
\fBTYPE.PROTO.backlog\fR
Backlog for incoming tcp connections (default 32)
.TP
\fBTYPE.PROTO.port\fR
A list of listen ports, comma separated.  By default, statsd-compatible listens on 8125, the default
statsd port, new-style stats is on 9125 and new-style added is on 9225.
.SH No Section
.PP
These are a few unsectioned variables controlling overall \fBministry\fR behaviour.
.TP
\fBtick_msec\fR
Overall internal tick time in msec.  Controls internal time accuracy (default 20)
.TP
\fBdaemon\fR
Whether \fBministry\fR disconnects from the controlling terminal with the daemon(2) system call
(default 0).  This can also be switched on with the -d CLI option.
.TP
\fBpidfile\fR
Filename \fBministry\fR will write its process ID to (default /var/run/ministry.pid).  This can also
be overriden with the -p <file> CLI option.
.TP
\fBinclude\fR
The name of another file to read in.  \fBMinistry\fR will refuse to read what it believes is the
same file twice - it could be fooled with symlinks or multiple hardlinks.  This is a protection
against circular includes.  Included files are read in depth-first, meaning reading the current
file is paused until the included file is read (possibly recursively).  This is important for any
duplication of config values, as the last one read will win.  If include is found within a section,
that section context is preserved into the new file, until it is changed by a new section heading.
.SH SEE ALSO
.BR ministry (1)
.SH AUTHOR
\fBMinistry\fP is written and maintained by John Denholm, Sky Betting And Gaming.
